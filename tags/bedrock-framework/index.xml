<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>bedrock-framework on Paulo Oliveira</title><link>https://blog.pauloliveira.dev/tags/bedrock-framework/</link><description>Recent content in bedrock-framework on Paulo Oliveira</description><generator>Hugo -- gohugo.io</generator><language>pt-BR</language><lastBuildDate>Tue, 18 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.pauloliveira.dev/tags/bedrock-framework/index.xml" rel="self" type="application/rss+xml"/><item><title>Cliente para Kafka (do zero) em .NET Core - parte 1</title><link>https://blog.pauloliveira.dev/post/2020-08-18-cliente-kafka-do-zero-net-core-parte-1/</link><pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate><guid>https://blog.pauloliveira.dev/post/2020-08-18-cliente-kafka-do-zero-net-core-parte-1/</guid><description>Segundo a Wikipedia protocolo é descrito como:
Na ciência da computação, um protocolo é uma convenção que controla e possibilita uma conexão, comunicação, transferência de dados entre dois sistemas computacionais. De maneira simples, um protocolo pode ser definido como &amp;ldquo;as regras que governam&amp;rdquo; a sintaxe, semântica e sincronização da comunicação. Os protocolos podem ser implementados pelo hardware, software ou por uma combinação dos dois.
Faz alguns meses que tenho investido tempo em compreender melhor gerenciamento de memória e otimização com .</description></item></channel></rss>